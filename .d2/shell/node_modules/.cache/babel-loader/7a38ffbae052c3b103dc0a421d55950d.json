{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport _JSXStyle from \"styled-jsx/style\";\nimport React, { PureComponent } from 'react';\nimport propTypes from 'prop-types';\nimport { Cancel } from '../icons/Cancel';\nimport { colors, spacers } from '../theme.js';\nconst removeIcon = {\n  styles: React.createElement(_JSXStyle, {\n    id: \"1204490597\"\n  }, [\"svg.jsx-1204490597{margin-right:\".concat(spacers.dp4, \";color:\").concat(colors.grey700, \";height:18px;width:18px;cursor:pointer;opacity:1;pointer-events:all;}\"), \"svg.jsx-1204490597:hover{opacity:0.82;}\"]),\n  className: \"jsx-1204490597\"\n};\nexport class Remove extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"onRemove\", e => {\n      e.stopPropagation(); // stop onRemove from triggering onClick on container\n\n      this.props.onRemove(e);\n    });\n  }\n\n  render() {\n    const onRemove = this.props.onRemove;\n    if (!onRemove) return null;\n    return React.createElement(\"span\", {\n      onClick: this.onRemove\n    }, React.createElement(Cancel, {\n      className: removeIcon.className\n    }), removeIcon.styles);\n  }\n\n}\nRemove.propTypes = {\n  onRemove: propTypes.func\n};","map":null,"metadata":{},"sourceType":"module"}