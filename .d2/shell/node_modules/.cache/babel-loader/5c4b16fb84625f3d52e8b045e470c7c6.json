{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ProfileMenu } from './ProfileMenu.js';\nimport { TextIcon } from '../TextIcon.js';\nimport { ImageIcon } from '../ImageIcon.js';\n\nfunction avatarPath(avatar, contextPath) {\n  if (!avatar) {\n    return null;\n  }\n\n  return \"\".concat(contextPath, \"/api/fileResources/\").concat(avatar.id, \"/data\");\n}\n\nexport default class Profile extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      show: false\n    });\n\n    _defineProperty(this, \"onDocClick\", evt => {\n      if (this.elContainer && !this.elContainer.contains(evt.target)) {\n        this.setState({\n          show: false\n        });\n      }\n    });\n\n    _defineProperty(this, \"onToggle\", () => this.setState({\n      show: !this.state.show\n    }));\n  }\n\n  componentDidMount() {\n    document.addEventListener('click', this.onDocClick);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.onDocClick);\n  }\n\n  userIcon(me, contextPath) {\n    const avatar = avatarPath(me.avatar, contextPath);\n\n    if (avatar) {\n      return React.createElement(ImageIcon, {\n        src: avatar,\n        onClick: this.onToggle,\n        dataTestId: \"headerbar-profile-icon-image\"\n      });\n    }\n\n    return React.createElement(TextIcon, {\n      name: me.name,\n      onClick: this.onToggle,\n      dataTestId: \"headerbar-profile-icon-text\"\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          user = _this$props.user,\n          contextPath = _this$props.contextPath;\n    return React.createElement(\"div\", {\n      ref: c => this.elContainer = c,\n      \"data-test-id\": \"headerbar-profile\",\n      className: \"jsx-661915851\"\n    }, this.userIcon(user, contextPath), this.state.show ? React.createElement(ProfileMenu, {\n      avatar: avatarPath(user.avatar, contextPath),\n      name: user.name,\n      email: user.email,\n      contextPath: contextPath\n    }) : null, React.createElement(_JSXStyle, {\n      id: \"661915851\"\n    }, [\"div.jsx-661915851{position:relative;width:36px;height:36px;margin:2px 12px 0 24px;}\"]));\n  }\n\n}\nProfile.propTypes = {\n  user: PropTypes.object.isRequired,\n  contextPath: PropTypes.string.isRequired\n};","map":null,"metadata":{},"sourceType":"module"}