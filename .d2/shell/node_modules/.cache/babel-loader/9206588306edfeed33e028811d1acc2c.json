{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from 'react';\nimport propTypes from 'prop-types';\nimport * as theme from './theme.js';\n\nconst toPrefixedThemeSection = themeSectionKey => Object.entries(theme[themeSectionKey]).reduce((prefixed, [key, value]) => {\n  prefixed[\"\".concat(themeSectionKey, \"-\").concat(key)] = value;\n  return prefixed;\n}, {});\n\nconst toCustomPropertyString = themeSection => Object.entries(themeSection).map(([key, value]) => \"--\".concat(key, \": \").concat(value, \";\")).join('\\n');\n/**\n * @module\n * @description Injects our theme variables as CSS custom properties\n * @param {CssVariables.PropTypes} props\n * @returns {React.Component}\n * @example import { CssVariables } from @dhis2/ui-core\n * @see Live demo: {@link /demo/?path=/story/cssvariables--default|Storybook}\n */\n\n\nconst CssVariables = props => {\n  const variables = Object.keys(props) // Filter all props that are false\n  .filter(prop => props[prop]) // Map props to corresponding theme section and prefixes keys with section name\n  .map(toPrefixedThemeSection) // Map each section to a single string of css custom property declarations\n  .map(toCustomPropertyString) // Join all the sections to a single string\n  .join('\\n');\n  return React.createElement(_JSXStyle, {\n    id: \"3443925957\",\n    dynamic: [variables]\n  }, [\"html{\".concat(variables, \";}\")]);\n};\n\nCssVariables.defaultProps = {\n  colors: false,\n  theme: false,\n  layers: false,\n  spacers: false,\n  elevations: false\n};\n/**\n * @typedef {Object} PropTypes\n * @static\n * @prop {boolean} [colors]\n * @prop {boolean} [theme]\n * @prop {boolean} [layers]\n * @prop {boolean} [spacers]\n * @prop {boolean} [elevations]\n */\n\nCssVariables.propTypes = {\n  colors: propTypes.bool,\n  theme: propTypes.bool,\n  layers: propTypes.bool,\n  spacers: propTypes.bool,\n  elevations: propTypes.bool\n};\nexport { CssVariables };","map":null,"metadata":{},"sourceType":"module"}