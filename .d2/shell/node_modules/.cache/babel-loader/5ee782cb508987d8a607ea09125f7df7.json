{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React, { PureComponent } from 'react';\nimport ReactDOM from 'react-dom';\nimport propTypes from 'prop-types';\nimport { getPosition } from './getPosition';\nimport { layers } from '../theme.js';\n\nclass DropMenu extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      top: 'auto',\n      left: 'auto'\n    });\n\n    _defineProperty(this, \"elContainer\", React.createRef());\n\n    _defineProperty(this, \"updatePosition\", () => {\n      this.setState(getPosition(this.props.anchorEl));\n    });\n\n    _defineProperty(this, \"onDocClick\", evt => {\n      if (this.elContainer.current && !this.elContainer.current.contains(evt.target) && !this.props.stayOpen) {\n        this.props.onClose();\n      }\n    });\n  }\n\n  componentDidMount() {\n    document.addEventListener('click', this.onDocClick);\n    window.addEventListener('resize', this.updatePosition);\n    this.updatePosition();\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.onDocClick);\n    window.removeEventListener('resize', this.updatePosition);\n  }\n\n  render() {\n    const _this$props = this.props,\n          className = _this$props.className,\n          component = _this$props.component;\n    const _this$state = this.state,\n          top = _this$state.top,\n          left = _this$state.left;\n    return ReactDOM.createPortal(React.createElement(\"div\", {\n      ref: this.elContainer,\n      className: _JSXStyle.dynamic([[\"2447591424\", [layers.applicationTop, top, left]]]) + \" \" + (className || \"\")\n    }, component, React.createElement(_JSXStyle, {\n      id: \"2447591424\",\n      dynamic: [layers.applicationTop, top, left]\n    }, [\"div.__jsx-style-dynamic-selector{z-index:\".concat(layers.applicationTop, \";position:absolute;top:\").concat(top, \";left:\").concat(left, \";}\")])), document.body);\n  }\n\n}\n\nDropMenu.propTypes = {\n  className: propTypes.string,\n\n  /** The component to use as the dropdown component */\n  component: propTypes.element,\n\n  /** Function to trigger when click happens outside of the DOM element */\n  onClose: propTypes.func,\n\n  /** Decides if the menu should call the onClose function or not */\n  stayOpen: propTypes.bool,\n\n  /** DOM node to position itself against */\n  anchorEl: propTypes.shape({\n    getBoundingClientRect: propTypes.func.isRequired\n  })\n};\nexport { DropMenu };","map":null,"metadata":{},"sourceType":"module"}