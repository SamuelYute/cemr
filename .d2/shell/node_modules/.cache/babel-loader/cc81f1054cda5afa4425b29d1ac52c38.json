{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport cx from 'classnames';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { statusPropType } from '../common-prop-types';\nimport { spacers, theme } from '../theme.js';\n\nconst Help = ({\n  children,\n  valid,\n  error,\n  warning,\n  className,\n  indent\n}) => React.createElement(\"p\", {\n  className: _JSXStyle.dynamic([[\"1196830538\", [theme.default, spacers.dp8, spacers.dp16, theme.valid, theme.error, theme.warning]]]) + \" \" + (cx(className, {\n    valid,\n    error,\n    warning,\n    indent\n  }) || \"\")\n}, children, React.createElement(_JSXStyle, {\n  id: \"1196830538\",\n  dynamic: [theme.default, spacers.dp8, spacers.dp16, theme.valid, theme.error, theme.warning]\n}, [\"p.__jsx-style-dynamic-selector{font-size:12px;line-height:12px;margin:0;color:\".concat(theme.default, \";white-space:nowrap;overflow:hidden;text-overflow:ellipsis;cursor:help;padding-top:\").concat(spacers.dp8, \";}\"), \".indent.__jsx-style-dynamic-selector{padding-left:\".concat(spacers.dp16, \";}\"), \".valid.__jsx-style-dynamic-selector{color:\".concat(theme.valid, \";}\"), \".error.__jsx-style-dynamic-selector{color:\".concat(theme.error, \";}\"), \".warning.__jsx-style-dynamic-selector{color:\".concat(theme.warning, \";}\")]));\n\nHelp.propTypes = {\n  className: propTypes.string,\n  children: propTypes.string.isRequired,\n  error: statusPropType,\n  valid: statusPropType,\n  warning: statusPropType,\n  indent: propTypes.bool\n};\nHelp.defaultProps = {\n  indent: true\n};\nexport { Help };","map":null,"metadata":{},"sourceType":"module"}