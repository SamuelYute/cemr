{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from 'react';\nimport propTypes from 'prop-types';\nimport cx from 'classnames';\nimport { Radio } from '../Radio';\nimport { statusPropType } from '../common-prop-types';\nimport { theme, spacers } from '../theme.js';\nconst inlineRadio = {\n  styles: React.createElement(_JSXStyle, {\n    id: \"624915113\"\n  }, [\".jsx-624915113{margin-right:\".concat(spacers.dp12, \";}\")]),\n  className: \"jsx-624915113\"\n};\nconst stackedRadio = {\n  styles: React.createElement(_JSXStyle, {\n    id: \"4177958317\"\n  }, [\".jsx-4177958317{margin-bottom:\".concat(spacers.dp12, \";}\")]),\n  className: \"jsx-4177958317\"\n};\n\nconst RadioGroup = ({\n  label,\n  name,\n  options,\n  className,\n  error,\n  inline,\n  onChange,\n  required,\n  valid,\n  value,\n  warning,\n  disabled\n}) => {\n  const statusProps = {\n    error,\n    warning,\n    valid,\n    disabled\n  };\n  const radioStyle = inline ? inlineRadio : stackedRadio;\n  return React.createElement(React.Fragment, null, label && React.createElement(\"span\", {\n    className: _JSXStyle.dynamic([[\"1400130183\", [theme.default, spacers.dp12, spacers.dp4, theme.valid, theme.warning, theme.error, theme.disabled]]]) + \" \" + (cx('group-label', _objectSpread({}, statusProps, {\n      required\n    })) || \"\")\n  }, label), React.createElement(\"div\", {\n    className: _JSXStyle.dynamic([[\"1400130183\", [theme.default, spacers.dp12, spacers.dp4, theme.valid, theme.warning, theme.error, theme.disabled]]]) + \" \" + (cx('group', {\n      inline\n    }) || \"\")\n  }, options.map(option => React.createElement(Radio, _extends({\n    key: option.value,\n    className: cx(radioStyle.className, className),\n    name: name,\n    value: option.value,\n    label: option.label,\n    checked: value === option.value,\n    onChange: onChange\n  }, statusProps)))), radioStyle.styles, React.createElement(_JSXStyle, {\n    id: \"1400130183\",\n    dynamic: [theme.default, spacers.dp12, spacers.dp4, theme.valid, theme.warning, theme.error, theme.disabled]\n  }, [\".group-label.__jsx-style-dynamic-selector{display:block;font-size:16px;line-height:24px;color:\".concat(theme.default, \";margin-bottom:\").concat(spacers.dp12, \";}\"), \".group.__jsx-style-dynamic-selector{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}\", \".group.inline.__jsx-style-dynamic-selector{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;}\", \".group-label.required.__jsx-style-dynamic-selector::after{padding-left:\".concat(spacers.dp4, \";content:'*';}\"), \".valid.__jsx-style-dynamic-selector{color:\".concat(theme.valid, \";}\"), \".warning.__jsx-style-dynamic-selector{color:\".concat(theme.warning, \";}\"), \".error.__jsx-style-dynamic-selector{color:\".concat(theme.error, \";}\"), \".disabled.__jsx-style-dynamic-selector{color:\".concat(theme.disabled, \";}\")]));\n};\n\nRadioGroup.propTypes = {\n  name: propTypes.string.isRequired,\n  options: propTypes.arrayOf(propTypes.shape({\n    label: propTypes.string.isRequired,\n    value: propTypes.any.isRequired\n  })).isRequired,\n  label: propTypes.string,\n  className: propTypes.string,\n  error: statusPropType,\n  helpText: propTypes.string,\n  inline: propTypes.bool,\n  onChange: propTypes.func,\n  required: propTypes.bool,\n  valid: statusPropType,\n  value: propTypes.any,\n  warning: statusPropType,\n  disabled: propTypes.bool\n};\nRadioGroup.defaultProps = {\n  inline: true\n};\nexport { RadioGroup };","map":null,"metadata":{},"sourceType":"module"}