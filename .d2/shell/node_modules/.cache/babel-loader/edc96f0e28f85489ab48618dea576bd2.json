{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from 'react';\nimport cx from 'classnames';\nimport { colors, theme, spacers } from '../../theme.js';\nimport { inputHeight, inputHeightDense } from '../constants.js';\nconst styles = [\"label.jsx-1801164837{box-sizing:border-box;color:\".concat(colors.grey700, \";display:block;font-size:16px;height:\").concat(inputHeight, \"px;left:0;line-height:\").concat(inputHeight + 2, \"px;overflow:hidden;padding-left:\").concat(spacers.dp16, \";position:absolute;text-overflow:ellipsis;top:0;-webkit-transform:translate(0,0);-ms-transform:translate(0,0);transform:translate(0,0);-webkit-transition:all 0.1s;transition:all 0.1s;white-space:nowrap;width:calc(100% - 44px);}\"), \".disabled.jsx-1801164837{color:\".concat(theme.disabled, \";}\"), \".focus.jsx-1801164837,.value.jsx-1801164837{display:inline-block;font-size:12px;height:auto;line-height:14px;-webkit-transform:translate(0,8px);-ms-transform:translate(0,8px);transform:translate(0,8px);width:auto;}\", \".dense.jsx-1801164837{height:\".concat(inputHeightDense, \"px;line-height:47px;-webkit-transform:translate(0,0);-ms-transform:translate(0,0);transform:translate(0,0);}\"), \".dense.focus.jsx-1801164837,.dense.value.jsx-1801164837{height:auto;line-height:12px;-webkit-transform:translate(0,8px);-ms-transform:translate(0,8px);transform:translate(0,8px);}\", \".required.jsx-1801164837::after{padding-left:\".concat(spacers.dp4, \";content:'*';}\"), \".focus.jsx-1801164837{color:\".concat(theme.secondary600, \";}\"), \".valid.jsx-1801164837{color:\".concat(theme.valid, \";}\"), \".valid.focus.jsx-1801164837{color:\".concat(colors.blue700, \";}\"), \".warning.jsx-1801164837{color:\".concat(theme.warning, \";}\"), \".warning.focus.jsx-1801164837{color:\".concat(colors.yellow700, \";}\"), \".error.jsx-1801164837{color:\".concat(theme.error, \";}\"), \".error.focus.jsx-1801164837{color:\".concat(colors.red800, \";}\")];\nstyles.__hash = \"1801164837\";\nexport const Label = ({\n  focus,\n  required,\n  valid,\n  warning,\n  error,\n  dense,\n  disabled,\n  value,\n  label,\n  htmlFor\n}) => React.createElement(\"label\", {\n  htmlFor: htmlFor,\n  className: \"jsx-\".concat(styles.__hash) + \" \" + (cx({\n    focus,\n    required,\n    valid,\n    warning,\n    error,\n    dense,\n    disabled,\n    value\n  }) || \"\")\n}, label, React.createElement(_JSXStyle, {\n  id: styles.__hash\n}, styles));","map":null,"metadata":{},"sourceType":"module"}