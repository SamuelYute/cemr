{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from 'react';\nimport propTypes from 'prop-types';\nimport cx from 'classnames';\nimport styles from './styles';\nimport { ChevronRight } from '../icons/Chevron.js';\nconst subChevron = {\n  styles: React.createElement(_JSXStyle, {\n    id: \"2023721407\"\n  }, [\"svg.jsx-2023721407{margin:0 -14px 0 auto;width:18px;height:18px;pointer-events:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;}\"]),\n  className: \"jsx-2023721407\"\n};\nconst subMenu = {\n  styles: React.createElement(_JSXStyle, {\n    id: \"2069506860\"\n  }, [\"div.jsx-2069506860{display:none;position:absolute;top:0;left:100%;white-space:nowrap;}\", \"li.jsx-2069506860:hover>div.jsx-2069506860{display:block;}\"]),\n  className: \"jsx-2069506860\"\n};\n\nconst SubMenu = ({\n  children,\n  className\n}) => React.createElement(\"div\", {\n  className: className\n}, children);\n\nSubMenu.propTypes = {\n  className: propTypes.string,\n  children: propTypes.element\n};\n\nconst createOnClickHandler = (onClick, value) => evt => {\n  if (onClick) {\n    evt.preventDefault();\n    evt.stopPropagation();\n    onClick(value);\n  }\n};\n\nconst MenuItem = ({\n  href,\n  value,\n  label,\n  icon,\n  children,\n  active,\n  disabled,\n  dense,\n  onClick,\n  className\n}) => {\n  const hasMenu = !!children;\n  const isClickable = href || onClick;\n  const LinkElement = isClickable ? 'a' : 'span';\n  const linkElementProps = {};\n\n  if (isClickable) {\n    linkElementProps.href = href;\n    linkElementProps.onClick = createOnClickHandler(onClick, value);\n  }\n\n  return React.createElement(\"li\", {\n    className: \"jsx-\".concat(styles.__hash) + \" \" + (cx(className, subMenu.className, {\n      disabled,\n      dense,\n      active\n    }) || \"\")\n  }, React.createElement(LinkElement, _extends({}, linkElementProps, {\n    className: \"jsx-\".concat(styles.__hash) + \" \" + (linkElementProps && linkElementProps.className != null && linkElementProps.className || \"link\")\n  }), icon, React.createElement(\"div\", {\n    className: \"jsx-\".concat(styles.__hash) + \" \" + \"label\"\n  }, label), hasMenu && React.createElement(ChevronRight, {\n    className: subChevron.className\n  }), subChevron.styles, hasMenu && React.createElement(SubMenu, {\n    className: subMenu.className\n  }, children), subMenu.styles), React.createElement(_JSXStyle, {\n    id: styles.__hash\n  }, styles));\n};\n\nMenuItem.propTypes = {\n  label: propTypes.oneOfType([propTypes.string, propTypes.object]).isRequired,\n  value: propTypes.any,\n  href: propTypes.string,\n\n  /** handler function called with `value` as the sole argument */\n  onClick: propTypes.func,\n  className: propTypes.string,\n  children: propTypes.element,\n  icon: propTypes.element,\n  dense: propTypes.bool,\n  active: propTypes.bool,\n  disabled: propTypes.bool\n};\nexport { MenuItem };","map":null,"metadata":{},"sourceType":"module"}