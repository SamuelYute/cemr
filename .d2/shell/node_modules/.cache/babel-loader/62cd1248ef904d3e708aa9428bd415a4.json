{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport propTypes from 'prop-types';\nimport React, { Component, createRef } from 'react';\nimport cx from 'classnames';\nimport { colors, theme, spacers } from '../theme.js';\nconst styles = [\"select.jsx-2367090762{background:none;border:0;color:\".concat(colors.grey900, \";font-size:16px;height:100%;left:0;outline:0;padding:0 12px 0 15px;position:absolute;top:0;width:100%;-webkit-appearance:none;-moz-appearance:none;}\"), \".disabled.jsx-2367090762{color:\".concat(theme.disabled, \";cursor:not-allowed;}\"), \".dense.jsx-2367090762{font-size:14px;}\", \".filled.jsx-2367090762{padding-top:\".concat(spacers.dp24, \";padding-left:\").concat(spacers.dp16, \";}\"), \".filled.dense.jsx-2367090762{padding-top:\".concat(spacers.dp24, \";}\"), \"option.jsx-2367090762:not(:checked){color:black;}\", \"select.jsx-2367090762:-moz-focusring{color:transparent;text-shadow:0 0 0 #000;}\"];\nstyles.__hash = \"2367090762\";\nexport class Select extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"selectRef\", createRef());\n  }\n\n  componentDidMount() {\n    if (this.props.focus) {\n      this.selectRef.current.focus();\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          dense = _this$props.dense,\n          filled = _this$props.filled,\n          disabled = _this$props.disabled,\n          onChange = _this$props.onChange,\n          onFocus = _this$props.onFocus,\n          onBlur = _this$props.onBlur,\n          value = _this$props.value,\n          children = _this$props.children,\n          name = _this$props.name,\n          tabIndex = _this$props.tabIndex;\n    const className = cx({\n      dense,\n      filled,\n      disabled\n    });\n    return React.createElement(\"select\", {\n      onChange: onChange,\n      value: value || -1,\n      disabled: disabled,\n      onFocus: onFocus,\n      onBlur: onBlur,\n      ref: this.selectRef,\n      name: name,\n      tabIndex: tabIndex,\n      className: \"jsx-\".concat(styles.__hash) + \" \" + (className || \"\")\n    }, React.createElement(\"option\", {\n      key: \"hidden-default-value\",\n      hidden: true,\n      disabled: true,\n      value: \"-1\",\n      className: \"jsx-\".concat(styles.__hash)\n    }), children, React.createElement(_JSXStyle, {\n      id: styles.__hash\n    }, styles));\n  }\n\n}\nSelect.propTypes = {\n  name: propTypes.string.isRequired,\n  onChange: propTypes.func.isRequired,\n  value: propTypes.string,\n  tabIndex: propTypes.string,\n  onFocus: propTypes.func,\n  onBlur: propTypes.func,\n  children: propTypes.oneOfType([propTypes.arrayOf(propTypes.shape({\n    tagName: propTypes.oneOf(['OPTION', 'OPTGROUP'])\n  })), propTypes.shape({\n    tagName: propTypes.oneOf(['OPTION', 'OPTGROUP'])\n  })]),\n  disabled: propTypes.bool,\n  filled: propTypes.bool,\n  dense: propTypes.bool,\n  focus: propTypes.bool\n};","map":null,"metadata":{},"sourceType":"module"}