{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React, { PureComponent } from 'react';\nimport propTypes from 'prop-types';\nimport cx from 'classnames';\nimport { colors, theme, spacers } from '../theme.js';\nimport { Content } from './Content';\nimport { Icon } from './Icon';\nimport { Remove } from './Remove';\n\nclass Chip extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"onClick\", e => {\n      if (!this.props.disabled && this.props.onClick) {\n        this.props.onClick(e);\n      }\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          selected = _this$props.selected,\n          disabled = _this$props.disabled,\n          dragging = _this$props.dragging,\n          overflow = _this$props.overflow,\n          className = _this$props.className,\n          children = _this$props.children;\n    return React.createElement(\"span\", {\n      onClick: this.onClick,\n      className: _JSXStyle.dynamic([[\"3311306814\", [spacers.dp4, colors.grey200, colors.grey900, colors.grey300, theme.secondary600, colors.white]]]) + \" \" + (cx(className, {\n        selected,\n        disabled,\n        dragging\n      }) || \"\")\n    }, React.createElement(Icon, {\n      icon: this.props.icon\n    }), React.createElement(Content, {\n      overflow: overflow,\n      children: children\n    }), React.createElement(Remove, {\n      onRemove: this.props.onRemove\n    }), React.createElement(_JSXStyle, {\n      id: \"3311306814\",\n      dynamic: [spacers.dp4, colors.grey200, colors.grey900, colors.grey300, theme.secondary600, colors.white]\n    }, [\"span.__jsx-style-dynamic-selector{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;height:32px;margin:\".concat(spacers.dp4, \";border-radius:16px;background-color:\").concat(colors.grey200, \";font-size:14px;line-height:16px;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:\").concat(colors.grey900, \";}\"), \"span.__jsx-style-dynamic-selector:hover{background-color:\".concat(colors.grey300, \";}\"), \".selected.__jsx-style-dynamic-selector{background-color:\".concat(theme.secondary600, \";font-weight:500;}\"), \".selected.__jsx-style-dynamic-selector:hover{background-color:#00695c;}\", \".selected.__jsx-style-dynamic-selector,.selected.__jsx-style-dynamic-selector .icon.__jsx-style-dynamic-selector,.selected.__jsx-style-dynamic-selector .remove-icon.__jsx-style-dynamic-selector{color:\".concat(colors.white, \";}\"), \".disabled.__jsx-style-dynamic-selector{cursor:not-allowed;opacity:0.3;}\", \".disabled.__jsx-style-dynamic-selector .remove-icon.__jsx-style-dynamic-selector{pointer-events:none;}\", \".dragging.__jsx-style-dynamic-selector{box-shadow:0 3px 1px -2px rgba(0,0,0,0.2), 0 2px 2px 0 rgba(0,0,0,0.14), 0 1px 5px 0 rgba(0,0,0,0.12);}\"]));\n  }\n\n}\n\nChip.propTypes = {\n  children: propTypes.string.isRequired,\n  className: propTypes.string,\n  icon: propTypes.element,\n  onClick: propTypes.func,\n  onRemove: propTypes.func,\n  selected: propTypes.bool,\n  disabled: propTypes.bool,\n  dragging: propTypes.bool,\n  overflow: propTypes.bool\n};\nexport { Chip };","map":null,"metadata":{},"sourceType":"module"}