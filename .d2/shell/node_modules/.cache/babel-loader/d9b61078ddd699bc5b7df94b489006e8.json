{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport propTypes from 'prop-types';\nimport { arrayWithLength } from '@dhis2/prop-types';\nimport { Action } from './Action';\nimport { spacers } from '../theme.js';\n\nconst Actions = ({\n  actions,\n  hide\n}) => {\n  if (!actions) {\n    return null;\n  }\n\n  return React.createElement(\"div\", {\n    className: _JSXStyle.dynamic([[\"961263490\", [spacers.dp48, spacers.dp12]]])\n  }, actions.map(action => React.createElement(Action, _extends({\n    key: action.label\n  }, action, {\n    hide: hide\n  }))), React.createElement(_JSXStyle, {\n    id: \"961263490\",\n    dynamic: [spacers.dp48, spacers.dp12]\n  }, [\"div.__jsx-style-dynamic-selector{margin-left:\".concat(spacers.dp48, \";margin-right:-\").concat(spacers.dp12, \";}\")]));\n};\n\nconst actionsPropType = arrayWithLength(0, 2, propTypes.shape({\n  label: propTypes.string.isRequired,\n  onClick: propTypes.func.isRequired\n}));\nActions.propTypes = {\n  actions: actionsPropType,\n  hide: propTypes.func.isRequired\n};\nexport { Actions, actionsPropType };","map":null,"metadata":{},"sourceType":"module"}