{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from 'react';\nimport propTypes from 'prop-types';\nimport cx from 'classnames';\nimport { ArrowDown } from '../icons/Arrow';\nimport { colors } from '../theme.js';\n\nconst Contents = ({\n  children,\n  open\n}) => React.createElement(\"div\", {\n  className: \"jsx-3677374542\" + \" \" + (cx('tree__contents', {\n    open\n  }) || \"\")\n}, children, React.createElement(_JSXStyle, {\n  id: \"3677374542\"\n}, [\"div.jsx-3677374542{height:0;overflow:hidden;-webkit-box-flex:1;-webkit-flex-grow:1;-ms-flex-positive:1;flex-grow:1;}\", \".open.jsx-3677374542{height:auto;}\"]));\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(ArrowDown, null);\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"span\", null);\n\nconst Arrow = ({\n  hasLeaves,\n  open,\n  onOpen,\n  onClose\n}) => {\n  const arrowIcon = hasLeaves ? _ref : _ref2;\n  const onClick = open ? onClose : onOpen;\n  return React.createElement(\"div\", {\n    className: _JSXStyle.dynamic([[\"930079085\", [colors.grey400, colors.grey700]]]) + \" \" + (cx('tree__arrow', {\n      open,\n      'has-leaves': hasLeaves\n    }) || \"\")\n  }, React.createElement(\"span\", {\n    onClick: onClick,\n    className: _JSXStyle.dynamic([[\"930079085\", [colors.grey400, colors.grey700]]])\n  }, arrowIcon), React.createElement(_JSXStyle, {\n    id: \"930079085\",\n    dynamic: [colors.grey400, colors.grey700]\n  }, [\"div.__jsx-style-dynamic-selector{width:24px;position:relative;-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;}\", \"div.__jsx-style-dynamic-selector:after{background:\".concat(colors.grey400, \";height:calc(100% - 24px);left:12px;position:absolute;top:15px;width:1px;z-index:1;}\"), \".has-leaves.open.__jsx-style-dynamic-selector:after{content:'';}\", \"span.__jsx-style-dynamic-selector{display:block;position:relative;z-index:2;fill:\".concat(colors.grey700, \";}\"), \"div.__jsx-style-dynamic-selector svg{vertical-align:top;-webkit-transform:rotate(-90deg);-ms-transform:rotate(-90deg);transform:rotate(-90deg);}\", \".open.__jsx-style-dynamic-selector svg{-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);}\"]));\n};\n\nconst Content = ({\n  open,\n  children,\n  label\n}) => React.createElement(\"div\", null, label, React.createElement(Contents, {\n  open: open\n}, children));\n\nexport const Node = ({\n  open,\n  component,\n  children,\n  onOpen,\n  onClose\n}) => {\n  const hasLeaves = !!React.Children.toArray(children).filter(i => i).length;\n  const className = cx('tree', {\n    open,\n    'has-leaves': hasLeaves\n  });\n  return React.createElement(\"div\", {\n    className: \"jsx-446742573\" + \" \" + (className || \"\")\n  }, React.createElement(Arrow, {\n    open: open,\n    hasLeaves: hasLeaves,\n    onOpen: onOpen,\n    onClose: onClose\n  }), React.createElement(Content, {\n    open: open,\n    label: component,\n    children: children\n  }), React.createElement(_JSXStyle, {\n    id: \"446742573\"\n  }, [\"div.jsx-446742573{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;}\"]));\n};\nNode.propTypes = {\n  component: propTypes.element.isRequired,\n  open: propTypes.bool,\n  onOpen: propTypes.func,\n  onClose: propTypes.func\n};","map":null,"metadata":{},"sourceType":"module"}